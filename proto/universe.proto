syntax = "proto3";

package engula.v1;

service Universe {
  rpc Database(DatabaseRequest) returns (DatabaseResponse) {}

  rpc Collection(CollectionRequest) returns (CollectionResponse) {}
}

message DatabaseRequest { repeated DatabaseRequestUnion requests = 1; }

message DatabaseResponse { repeated DatabaseResponseUnion responses = 1; }

message DatabaseRequestUnion {
  oneof request {
    ListDatabasesRequest list_databases = 1;
    CreateDatabaseRequest create_database = 2;
    UpdateDatabaseRequest update_database = 3;
    DeleteDatabaseRequest delete_database = 4;
    DescribeDatabaseRequest describe_database = 5;
  }
}

message DatabaseResponseUnion {
  oneof response {
    ListDatabasesResponse list_databases = 1;
    CreateDatabaseResponse create_database = 2;
    UpdateDatabaseResponse update_database = 3;
    DeleteDatabaseResponse delete_database = 4;
    DescribeDatabaseResponse describe_database = 5;
  }
}

message ListDatabasesRequest {
  // TODO: pagination
}

message ListDatabasesResponse { repeated DatabaseDesc descs = 1; }

message CreateDatabaseRequest { DatabaseSpec spec = 1; }

message CreateDatabaseResponse { DatabaseDesc desc = 1; }

message UpdateDatabaseRequest {
  string name = 1;
  DatabaseSpec spec = 2;
}

message UpdateDatabaseResponse { DatabaseDesc desc = 1; }

message DeleteDatabaseRequest { string name = 1; }

message DeleteDatabaseResponse {}

message DescribeDatabaseRequest { string name = 1; }

message DescribeDatabaseResponse { DatabaseDesc desc = 1; }

message CollectionRequest {
  string dbname = 1;
  repeated CollectionRequestUnion requests = 2;
}

message CollectionResponse { repeated CollectionResponseUnion responses = 1; }

message CollectionRequestUnion {
  oneof request {
    ListCollectionsRequest list_collections = 1;
    CreateCollectionRequest create_collection = 2;
    UpdateCollectionRequest update_collection = 3;
    DeleteCollectionRequest delete_collection = 4;
    DescribeCollectionRequest describe_collection = 5;
  }
}

message CollectionResponseUnion {
  oneof response {
    ListCollectionsResponse list_collections = 1;
    CreateCollectionResponse create_collection = 2;
    UpdateCollectionResponse update_collection = 3;
    DeleteCollectionResponse delete_collection = 4;
    DescribeCollectionResponse describe_collection = 5;
  }
}

message ListCollectionsRequest {
  // TODO: pagination
}

message ListCollectionsResponse { repeated CollectionDesc descs = 1; }

message CreateCollectionRequest { CollectionSpec spec = 1; }

message CreateCollectionResponse { CollectionDesc desc = 1; }

message UpdateCollectionRequest {
  string name = 1;
  CollectionSpec spec = 2;
}

message UpdateCollectionResponse { CollectionDesc desc = 1; }

message DeleteCollectionRequest { string name = 1; }

message DeleteCollectionResponse {}

message DescribeCollectionRequest { string name = 1; }

message DescribeCollectionResponse { CollectionDesc desc = 1; }

message DatabaseSpec { string name = 1; }

message DatabaseDesc {
  uint64 id = 1;
  DatabaseSpec spec = 2;
}

message CollectionSpec { string name = 1; }

message CollectionDesc {
  uint64 id = 1;
  uint64 database_id = 2;
  CollectionSpec spec = 3;
}
